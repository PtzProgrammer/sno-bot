/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è VK –±–æ—Ç–∞
 * –ó–∞–ø—É—Å–∫: node test-logging.js
 */

const logger = require('./src/utils/logger');
const CursorIntegration = require('./src/utils/cursorIntegration');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Cursor
const cursorIntegration = new CursorIntegration({
  updateInterval: 2000, // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
  maxLogsInFile: 100
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
cursorIntegration.start();

console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è...\n');

// –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
console.log('üìù –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ');
logger.info('–¢–µ—Å—Ç–æ–≤–æ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', { test: 'basic' });
logger.warn('–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', { test: 'warning' });
logger.error('–¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞', { test: 'error' });
logger.debug('–û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', { test: 'debug' });

// –¢–µ—Å—Ç 2: VK —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ª–æ–≥–∏
console.log('\nüì± –¢–µ—Å—Ç 2: VK —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ª–æ–≥–∏');
logger.vkMessage(12345, '–ü—Ä–∏–≤–µ—Ç, –±–æ—Ç!', 'received');
logger.vkMessage(12345, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!', 'sent');
logger.vkError(new Error('VK API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'), { userId: 12345 });

// –¢–µ—Å—Ç 3: AI –∑–∞–ø—Ä–æ—Å—ã
console.log('\nüß† –¢–µ—Å—Ç 3: AI –∑–∞–ø—Ä–æ—Å—ã');
logger.aiRequest(12345, '–ö–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞—É—á–Ω—É—é —Å—Ç–∞—Ç—å—é?', '–í–æ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ...');
logger.aiRequest(67890, '–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –°–ù–ö', null);

// –¢–µ—Å—Ç 4: –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
console.log('\n‚ö° –¢–µ—Å—Ç 4: –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å');
const startTime = Date.now();
setTimeout(() => {
  const duration = Date.now() - startTime;
  logger.performance('–¢–µ—Å—Ç–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è', duration, { test: 'performance' });
}, 100);

// –¢–µ—Å—Ç 5: –ú–∞—Å—Å–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
console.log('\nüìä –¢–µ—Å—Ç 5: –ú–∞—Å—Å–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ');
for (let i = 0; i < 20; i++) {
  logger.info(`–ú–∞—Å—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ${i + 1}`, { iteration: i + 1 });
}

// –¢–µ—Å—Ç 6: –û—à–∏–±–∫–∏
console.log('\n‚ùå –¢–µ—Å—Ç 6: –û—à–∏–±–∫–∏');
try {
  throw new Error('–¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è');
} catch (error) {
  logger.error('–ü–æ–π–º–∞–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞', { 
    error: error.message, 
    stack: error.stack,
    test: 'exception' 
  });
}

// –¢–µ—Å—Ç 7: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
console.log('\nüìà –¢–µ—Å—Ç 7: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞');
setTimeout(() => {
  const stats = logger.getStats();
  console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–æ–≤:', JSON.stringify(stats, null, 2));
}, 2000);

// –¢–µ—Å—Ç 8: –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è Cursor
console.log('\nüì§ –¢–µ—Å—Ç 8: –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è Cursor');
setTimeout(() => {
  const exportedLogs = logger.exportForCursor({
    level: 'info',
    limit: 10,
    includeMeta: true
  });
  console.log(`–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${exportedLogs.length} –ª–æ–≥–æ–≤ –¥–ª—è Cursor`);
}, 3000);

// –¢–µ—Å—Ç 9: –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤
console.log('\nüßπ –¢–µ—Å—Ç 9: –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤');
setTimeout(() => {
  const deletedCount = logger.cleanup(0); // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ 0 –¥–Ω–µ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∞)
  console.log(`–£–¥–∞–ª–µ–Ω–æ ${deletedCount} —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥ —Ñ–∞–π–ª–æ–≤`);
}, 4000);

// –¢–µ—Å—Ç 10: –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–º–ø–∞
console.log('\nüíæ –¢–µ—Å—Ç 10: –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–º–ø–∞ –ª–æ–≥–æ–≤');
setTimeout(() => {
  const dumpFile = cursorIntegration.createLogDump();
  console.log(`–°–æ–∑–¥–∞–Ω –¥–∞–º–ø –ª–æ–≥–æ–≤: ${dumpFile}`);
}, 5000);

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
setTimeout(() => {
  console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('\nüìÅ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ cursor-logs/:');
  console.log('   - README.md - –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è');
  console.log('   - live-logs.md - –∂–∏–≤—ã–µ –ª–æ–≥–∏');
  console.log('   - bot-stats.json - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞');
  console.log('   - recent-errors.md - –æ—à–∏–±–∫–∏');
  console.log('   - performance.md - –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å');
  console.log('\nüåê API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:');
  console.log('   - GET /logs - –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤');
  console.log('   - GET /logs/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞');
  console.log('   - GET /logs/export - —ç–∫—Å–ø–æ—Ä—Ç');
  console.log('   - GET /logs/errors - –æ—à–∏–±–∫–∏');
  console.log('   - GET /logs/performance - –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å');
  console.log('   - POST /logs/cleanup - –æ—á–∏—Å—Ç–∫–∞');
  
  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
  cursorIntegration.stop();
  process.exit(0);
}, 6000);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
process.on('SIGINT', () => {
  console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...');
  cursorIntegration.stop();
  process.exit(0);
});

process.on('SIGTERM', () => {
  console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...');
  cursorIntegration.stop();
  process.exit(0);
});
