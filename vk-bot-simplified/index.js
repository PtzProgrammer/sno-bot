/**
 * –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è VK Chat Bot –¥–ª—è –°–ù–û –°–ü–± –Æ–ò –£–ü –†–§ - Cloud Function
 * –í–µ—Ä—Å–∏—è –±–µ–∑ –õ–∏—Ç–ë–æ—Ç–∞ (–ì–û–°–¢ —Ñ—É–Ω–∫—Ü–∏–π)
 */
const axios = require('axios');
const logger = require('./src/utils/logger');
const CursorIntegration = require('./src/utils/cursorIntegration');
const LogRoutes = require('./src/routes/logRoutes');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Cursor
const cursorIntegration = new CursorIntegration({
  updateInterval: 3000, // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
  maxLogsInFile: 500
});

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Cursor
cursorIntegration.start();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ª–æ–≥–æ–≤
const logRoutes = new LogRoutes(cursorIntegration);

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const config = {
  VK_ACCESS_TOKEN: process.env.VK_ACCESS_TOKEN || process.env.VK_API_TOKEN,
  VK_CONFIRMATION_TOKEN: process.env.VK_CONFIRMATION_TOKEN,
  VK_GROUP_ID: process.env.VK_GROUP_ID,
  ADMIN_USER_IDS: process.env.ADMIN_USER_IDS?.split(',').map(id => parseInt(id.trim())) || [],
  VK_API_VERSION: '5.131',
  
  // GigaChat –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  GIGACHAT_ENABLED: process.env.GIGACHAT_ENABLED === 'true',
  GIGACHAT_CREDENTIALS: process.env.GIGACHAT_CREDENTIALS,
  GIGACHAT_SCOPE: process.env.GIGACHAT_SCOPE || 'GIGACHAT_API_PERS',
  GIGACHAT_MODEL: process.env.GIGACHAT_MODEL || 'GigaChat'
};

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ä–µ–∂–∏–º–µ –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–∞
const aiHelperUsers = new Set();

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
function createMainMenuKeyboard() {
  return {
    one_time: false,
    inline: false,
    buttons: [
      [
        createButton("üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ", {intent: "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"}, "primary")
      ],
      [
        createButton("üéì –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", {intent: "–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"}),
        createButton("üî¨ –°–ù–ö", {intent: "–∫—Ä—É–∂–∫–∏"})
      ],
      [
        createButton("üß† –£–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫", {intent: "ai_helper"}, "positive")
      ],
      [
        createButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", {intent: "–∫–æ–Ω—Ç–∞–∫—Ç—ã"}),
        createButton("‚ùì FAQ", {intent: "faq"})
      ]
    ]
  };
}

// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫
function createButton(label, payload, color = "secondary") {
  return {
    action: { type: "text", label, payload: JSON.stringify(payload) },
    color
  };
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
function createBackToMenuKeyboard() {
  return {
    one_time: true,
    inline: false,
    buttons: [[createButton("üè† –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", {intent: "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"})]]
  };
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –±–æ—Ç–∞
// –ù–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ update-responses.js

const intentResponses = {
  '–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ': `üëã –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ü–æ–º–æ—â–Ω–∏–∫ –°–ù–û –°–ü–±–Æ–ò(—Ñ) –£–ü –†–§!

–Ø –±–æ—Ç –°—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ –Ω–∞—É—á–Ω–æ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–æ–º!

–ß—Ç–æ —É–º–µ—é:
üî¨ –†–∞—Å—Å–∫–∞–∂—É –ø—Ä–æ –°–ù–ö –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
üèÜ –ü–æ–¥—Å–∫–∞–∂—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –∏ –∫–æ–Ω–∫—É—Ä—Å—ã
üß† –û—Ç–≤–µ—á—É –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —Å –ø–æ–º–æ—â—å—é –ò–ò

–ñ–º–∏ –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–∏—à–∏ —á—Ç–æ –Ω—É–∂–Ω–æ! üëá`,
  '–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è': `üéì –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –°–ù–û

–£ –Ω–∞—Å –≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å —á–µ–º –∑–∞–Ω—è—Ç—å—Å—è:
üìÖ –°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–µ –æ–ª–∏–º–ø–∏–∞–¥—ã –ø–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞–º
üó£Ô∏è –ö—Ä—É–≥–ª—ã–µ —Å—Ç–æ–ª—ã
üìö –ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∫–æ–Ω–∫—É—Ä—Å—ã

–•–æ—á–µ—à—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å? –ü–∏—à–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è–º –°–ù–û ‚Äî –æ–Ω–∏ —Ä–∞—Å—Å–∫–∞–∂—É—Ç –≤—Å—ë! üöÄ`,
  '–∫—Ä—É–∂–∫–∏': `üî¨ –°–ù–ö - —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–µ –Ω–∞—É—á–Ω—ã–µ –∫—Ä—É–∂–∫–∏!

–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞—É—á–Ω–æ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞! –í –°–ù–ö —Ç—ã —Å–º–æ–∂–µ—à—å:

üìö –£–≥–ª—É–±–∏—Ç—å –∑–Ω–∞–Ω–∏—è –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–º –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞–º
üéØ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –Ω–∞—É—á–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö
üèÜ –ì–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –æ–ª–∏–º–ø–∏–∞–¥–∞–º –∏ –∫–æ–Ω–∫—É—Ä—Å–∞–º
üë• –ù–∞–π—Ç–∏ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤

–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∫—Ä—É–∂–∫–æ–≤ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –Ω–∞—É—á–Ω—ã—Ö –∑–∞–¥–∞—á.

–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ? –û–±—Ä–∞—â–∞–π—Å—è –∫ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è–º –°–ù–û! üòé`,
  '–∫–æ–Ω—Ç–∞–∫—Ç—ã': `üìû –ö–∞–∫ –Ω–∞—Å –Ω–∞–π—Ç–∏

üìß Email: sno.spb.up.rf@gmail.com
üì± VK: https://vk.com/sno_uprf

–°—Ç—Ä—É–∫—Ç—É—Ä–∞:
üë®‚Äçüíº –ú–∞—Ç–≤–µ–µ–≤ –î.–í. - –ü—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å –°–ù–û
üë®‚Äçüíº –ë–∞—Ö–∏–ª–∏–Ω –ê.–ê. - –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–º—É —Å–µ–∫—Ç–æ—Ä—É
üë®‚Äçüíº –ö–∞—Ä–∞–±–∏–Ω –ò.–î. - –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –ø–æ –∏–∑–¥–∞—Ç–µ–ª—å—Å–∫–æ–º—É —Å–µ–∫—Ç–æ—Ä—É
üë©‚Äçüíº –ú–µ–Ω–æ–≤—â–∏–∫–æ–≤–∞ –ö.–ú. - –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –ø–æ –Ω–∞—É—á–Ω–æ–º—É —Å–µ–∫—Ç–æ—Ä—É
üë©‚Äçüíº –ö–∞—Ä—Ç–∞—à–µ–≤–∞ –í.–ê - –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –ø–æ –≤–Ω–µ—à–Ω–µ–º—É —Å–µ–∫—Ç–æ—Ä—É`,
  'faq': `‚ùì –°–∞–º—ã–µ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã

üéØ –ê —á—Ç–æ –º–Ω–µ —ç—Ç–æ –¥–∞—Å—Ç?
‚Ä¢ –ë–∞–ª–ª—ã –∫ —Å—Ç–∏–ø–µ–Ω–¥–∏–∏
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å—Å—è
‚Ä¢ –£—á–∞—Å—Ç–∏–µ –≤ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è—Ö
‚Ä¢ –ü–æ–ª–µ–∑–Ω—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞

üìù –ö–∞–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–≤–æ—é —Ä–∞–±–æ—Ç—É?
–ú—ã –ø—É–±–ª–∏–∫—É–µ–º —Ä–∞–±–æ—Ç—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ —Å–±–æ—Ä–Ω–∏–∫–∞—Ö

üìÖ –ì–¥–µ –∏—Å–∫–∞—Ç—å –Ω–∞—É—á–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è?
–°–ª–µ–¥–∏ –∑–∞ –Ω–∞—à–∏–º–∏ –ø–æ–¥–±–æ—Ä–∫–∞–º–∏ –∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏

–ï—â–µ –≤–æ–ø—Ä–æ—Å—ã? –ü–∏—à–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è–º –°–ù–û - –æ–Ω–∏ –≤—Å—ë –æ–±—ä—è—Å–Ω—è—Ç! üí¨`,
  'ai_helper': `üß† –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –≤–∫–ª—é—á–µ–Ω!

–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å –º–µ–Ω—è –æ —á—ë–º —É–≥–æ–¥–Ω–æ - –æ–± —É—á–µ–±–µ, –Ω–∞—É–∫–µ, –°–ù–û. –Ø –æ—Ç–≤–µ—á—É —Å –ø–æ–º–æ—â—å—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞!

–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:
‚Ä¢ "–ö–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏?"
‚Ä¢ "–ö–∞–∫–æ–π –∫—Ä—É–∂–æ–∫ –º–Ω–µ –ø–æ–¥–æ–π–¥–µ—Ç?"
‚Ä¢ "–ö–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å –∫—Ä—É—Ç—É—é —Å—Ç–∞—Ç—å—é?"

–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏ —è –æ—Ç–≤–µ—á—É! üí¨`,
};

const systemMessages = {
  'ai_unavailable': `‚ùå –ò–ò –ø–æ–º–æ—â–Ω–∏–∫ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –ø–æ–∑–∂–µ.`,
  'ai_processing': `üß† –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –≤–æ–ø—Ä–æ—Å...`,
  'back_to_menu': `üè† –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é`,
};

const aiFallbackResponses = {
  'greeting': `–ü—Ä–∏–≤–µ—Ç! –Ø —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –°–ù–û –°–ü–±–Æ–ò(—Ñ) –£–ü –†–§. –ú–æ–≥—É –ø–æ–º–æ—á—å —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –æ–± —É—á–µ–±–µ, –Ω–∞—É–∫–µ –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö! üòä`,
  'events': `–í –°–ù–û —Ä–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è –Ω–∞—É—á–Ω—ã–µ —Å–µ–º–∏–Ω–∞—Ä—ã, –∫—Ä—É–≥–ª—ã–µ —Å—Ç–æ–ª—ã –∏ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏ –≤ –≥—Ä—É–ø–ø–µ! üìÖ`,
  'circles': `–£ –Ω–∞—Å –µ—Å—Ç—å –Ω–∞—É—á–Ω—ã–µ –∫—Ä—É–∂–∫–∏: "–ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–Ω–æ–µ –ø—Ä–∞–≤–æ", "–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–µ –ø—Ä–∞–≤–æ", "–ö—Ä–∏–º–∏–Ω–∞–ª–∏—Å—Ç–∏–∫–∞", "–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å–∫–æ–µ –ø—Ä–∞–≤–æ". –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å! üî¨`,
  'contacts': `–ö–æ–Ω—Ç–∞–∫—Ç—ã –°–ù–û: sno@spbui.ru, –õ–∏—Ç–µ–π–Ω—ã–π –ø—Ä. 44, –°–ü–±. –ö—É—Ä–∞—Ç–æ—Ä—ã: –ò–≤–∞–Ω–æ–≤–∞ –ê.–ê. (–ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å), –ü–µ—Ç—Ä–æ–≤ –ú.–í. (–∑–∞–º), –°–∏–¥–æ—Ä–æ–≤–∞ –ï.–ò. (—Å–µ–∫—Ä–µ—Ç–∞—Ä—å) üìû`,
  'general': `–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–æ–ø—Ä–æ—Å! –Ø —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –°–ù–û. –ú–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö, –∫—Ä—É–∂–∫–∞—Ö, –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? ü§î`,
};

module.exports = {
  intentResponses,
  systemMessages,
  aiFallbackResponses
};
;

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ VK
async function sendMessage(peerId, message, keyboard = null) {
  const params = {
    peer_id: peerId,
    message: message,
    random_id: Math.floor(Math.random() * 1000000),
    v: config.VK_API_VERSION
  };

  if (keyboard) {
    params.keyboard = JSON.stringify(keyboard);
  }

  try {
    const response = await axios.post(
      `https://api.vk.com/method/messages.send?access_token=${config.VK_ACCESS_TOKEN}`,
      new URLSearchParams(params)
    );

    if (response.data.error) {
      logger.vkError(response.data.error, { peerId, message });
      return null;
    }

    return response.data.response;
  } catch (error) {
    logger.vkError(error, { peerId, message, operation: 'sendMessage' });
    return null;
  }
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ–Ω—Ç–∞ –ø–æ —Ç–µ–∫—Å—Ç—É —Å–æ–æ–±—â–µ–Ω–∏—è
function getIntentFromText(text) {
  const normalizedText = text.toLowerCase().trim();
  
  if (normalizedText.includes('–ø—Ä–∏–≤–µ—Ç') || normalizedText.includes('hello') || normalizedText === '–Ω–∞—á–∞—Ç—å') {
    return '–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ';
  }
  if (normalizedText.includes('–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ') || normalizedText.includes('—Å–æ–±—ã—Ç–∏–µ')) {
    return '–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è';
  }
  if (normalizedText.includes('–∫—Ä—É–∂–æ–∫') || normalizedText.includes('—Å–µ–∫—Ü–∏—è')) {
    return '–∫—Ä—É–∂–∫–∏';
  }
  if (normalizedText.includes('–∫–æ–Ω—Ç–∞–∫—Ç') || normalizedText.includes('—Å–≤—è–∑')) {
    return '–∫–æ–Ω—Ç–∞–∫—Ç—ã';
  }
  if (normalizedText.includes('faq') || normalizedText.includes('–≤–æ–ø—Ä–æ—Å') || normalizedText.includes('–ø–æ–º–æ—â—å')) {
    return 'faq';
  }
  
  return '–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ä–µ–∂–∏–º–µ –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–∞
async function handleAIHelperMessage(peerId, userId, userMessage) {
  const startTime = Date.now();
  
  try {
    logger.aiRequest(userId, userMessage);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω –ª–∏ GigaChat
    if (!config.GIGACHAT_ENABLED) {
      logger.warn('GigaChat –æ—Ç–∫–ª—é—á–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö', { userId });
      await sendMessage(peerId, 
        '‚ùå –ò–ò –ø–æ–º–æ—â–Ω–∏–∫ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –ø–æ–∑–∂–µ.',
        createBackToMenuKeyboard()
      );
      return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–ø–µ—á–∞—Ç–∞–µ—Ç"
    await sendMessage(peerId, 'üß† –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –≤–æ–ø—Ä–æ—Å...');
    
    logger.debug('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ GigaChat', { userId });
    
    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç GigaChat (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
    const aiResponse = await getGigaChatResponse(userMessage);
    
    if (aiResponse) {
      logger.info('–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç GigaChat', { userId, responseLength: aiResponse.length });
      await sendMessage(peerId, 
        `üß† ${aiResponse}`,
        createBackToMenuKeyboard()
      );
    } else {
      logger.warn('–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç GigaChat, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback', { userId });
      const fallbackResponse = getFallbackAIResponse(userMessage);
      await sendMessage(peerId, 
        `üß† ${fallbackResponse}`,
        createBackToMenuKeyboard()
      );
    }
  } catch (error) {
    logger.error('AI Helper error', { error: error.message, userId, userMessage });
    const fallbackResponse = getFallbackAIResponse(userMessage);
    await sendMessage(peerId, 
      `üß† ${fallbackResponse}`,
      createBackToMenuKeyboard()
    );
  } finally {
    const duration = Date.now() - startTime;
    logger.performance('AI Helper Message', duration, { userId });
  }
}

// –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å GigaChat
async function getGigaChatResponse(userMessage) {
  try {
    if (!config.GIGACHAT_CREDENTIALS) {
      logger.warn('GigaChat credentials –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
      return null;
    }

    // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Å GigaChat API
    // –î–ª—è —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
    logger.debug('GigaChat API –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏');
    return null;
  } catch (error) {
    logger.error('GigaChat error', { error: error.message, userMessage });
    return null;
  }
}

// –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ò–ò –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ GigaChat
function getFallbackAIResponse(userMessage) {
  const lowerMessage = userMessage.toLowerCase();
  
  if (lowerMessage.includes('–ø—Ä–∏–≤–µ—Ç') || lowerMessage.includes('hello')) {
    return '–ü—Ä–∏–≤–µ—Ç! –Ø —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –°–ù–û –°–ü–±–Æ–ò(—Ñ) –£–ü –†–§. –ú–æ–≥—É –ø–æ–º–æ—á—å —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –æ–± —É—á–µ–±–µ, –Ω–∞—É–∫–µ –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö! üòä';
  }
  
  if (lowerMessage.includes('–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ') || lowerMessage.includes('—Å–æ–±—ã—Ç–∏–µ')) {
    return '–í –°–ù–û —Ä–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è –Ω–∞—É—á–Ω—ã–µ —Å–µ–º–∏–Ω–∞—Ä—ã, –∫—Ä—É–≥–ª—ã–µ —Å—Ç–æ–ª—ã –∏ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏ –≤ –≥—Ä—É–ø–ø–µ! üìÖ';
  }
  
  if (lowerMessage.includes('–∫—Ä—É–∂–æ–∫') || lowerMessage.includes('—Å–Ω–∫')) {
    return '–£ –Ω–∞—Å –µ—Å—Ç—å –Ω–∞—É—á–Ω—ã–µ –∫—Ä—É–∂–∫–∏: "–ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–Ω–æ–µ –ø—Ä–∞–≤–æ", "–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–µ –ø—Ä–∞–≤–æ", "–ö—Ä–∏–º–∏–Ω–∞–ª–∏—Å—Ç–∏–∫–∞", "–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å–∫–æ–µ –ø—Ä–∞–≤–æ". –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å! üî¨';
  }
  
  if (lowerMessage.includes('–∫–æ–Ω—Ç–∞–∫—Ç') || lowerMessage.includes('—Å–≤—è–∑')) {
    return '–ö–æ–Ω—Ç–∞–∫—Ç—ã –°–ù–û: sno@spbui.ru, –õ–∏—Ç–µ–π–Ω—ã–π –ø—Ä. 44, –°–ü–±. –ö—É—Ä–∞—Ç–æ—Ä—ã: –ò–≤–∞–Ω–æ–≤–∞ –ê.–ê. (–ø—Ä–µ–¥—Å–µ–¥–∞—Ç–µ–ª—å), –ü–µ—Ç—Ä–æ–≤ –ú.–í. (–∑–∞–º), –°–∏–¥–æ—Ä–æ–≤–∞ –ï.–ò. (—Å–µ–∫—Ä–µ—Ç–∞—Ä—å) üìû';
  }
  
  return '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–æ–ø—Ä–æ—Å! –Ø —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –°–ù–û. –ú–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö, –∫—Ä—É–∂–∫–∞—Ö, –∫–æ–Ω—Ç–∞–∫—Ç–∞—Ö. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? ü§î';
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ–Ω—Ç–∞
async function handleIntent(intent, peerId, userId) {
  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–∞
  if (intent === 'ai_helper') {
    aiHelperUsers.add(userId);
    const response = intentResponses[intent];
    const keyboard = createBackToMenuKeyboard();
    await sendMessage(peerId, response, keyboard);
    return;
  }
  
  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–Ω—É–ª—Å—è –≤ –º–µ–Ω—é - —É–±–∏—Ä–∞–µ–º –∏–∑ —Ä–µ–∂–∏–º–∞ –ò–ò
  if (intent === '–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ') {
    aiHelperUsers.delete(userId);
  }
  
  const response = intentResponses[intent] || intentResponses['–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ'];
  const keyboard = createMainMenuKeyboard();
  
  await sendMessage(peerId, response, keyboard);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async function processMessage(message) {
  const peerId = message.peer_id;
  const userId = message.from_id;
  const messageText = message.text || '';

  // –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  logger.vkMessage(userId, messageText, 'received');
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ payload (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤—ã—à–µ, —á–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞)
  if (message.payload) {
    try {
      const payload = JSON.parse(message.payload);
      logger.debug('–û–±—Ä–∞–±–æ—Ç–∫–∞ payload', { payload, userId });
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ–Ω—Ç–æ–≤
      if (payload.intent) {
        logger.info('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º intent', { intent: payload.intent, userId });
        await handleIntent(payload.intent, peerId, userId);
        return;
      }
    } catch (error) {
      logger.error('Error parsing payload', { error: error.message, payload: message.payload, userId });
    }
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
  if (message.text) {
    logger.debug('–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞', { text: message.text, userId });
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ—Å—Ç—ã–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    const lowerText = message.text.toLowerCase().trim();
    if (lowerText === '–ø—Ä–∏–≤–µ—Ç' || lowerText === 'hello' || lowerText === 'hi' || lowerText === '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ') {
      logger.info('–ü—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', { userId });
      await handleIntent('–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ', peerId, userId);
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–∞
    if (aiHelperUsers.has(userId) && messageText && !messageText.startsWith('/')) {
      logger.info('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ –ò–ò, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º', { userId });
      await handleAIHelperMessage(peerId, userId, messageText);
      return;
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω—Ç–µ–Ω—Ç
    logger.debug('–û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω—Ç–µ–Ω—Ç', { text: message.text, userId });
    const intent = getIntentFromText(message.text);
    logger.info('–û–ø—Ä–µ–¥–µ–ª–µ–Ω –∏–Ω—Ç–µ–Ω—Ç', { intent, userId });
    
    if (intentResponses[intent]) {
      await handleIntent(intent, peerId, userId);
      return;
    }
    
    // –ï—Å–ª–∏ –∏–Ω—Ç–µ–Ω—Ç –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    logger.warn('–ò–Ω—Ç–µ–Ω—Ç –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ', { text: message.text, userId });
    await handleIntent('–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ', peerId, userId);
  }
}

// –ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è Cloud Function
module.exports.handler = async (event, context) => {
  const startTime = Date.now();
  
  try {
    const body = JSON.parse(event.body || '{}');
    
    logger.info('Received event', { 
      type: body.type, 
      hasObject: !!body.object,
      httpMethod: event.httpMethod,
      path: event.path 
    });

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
    if (body.type === 'confirmation') {
      logger.info('Confirmation request received');
      return {
        statusCode: 200,
        body: config.VK_CONFIRMATION_TOKEN
      };
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (body.type === 'message_new') {
      logger.info('New message received', { 
        userId: body.object?.message?.from_id,
        peerId: body.object?.message?.peer_id 
      });
      
      // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
      setImmediate(async () => {
        try {
          await processMessage(body.object.message);
        } catch (error) {
          logger.error('Error processing message', { 
            error: error.message, 
            message: body.object?.message 
          });
        }
      });

      return {
        statusCode: 200,
        body: 'ok'
      };
    }

    // Health check
    if (event.httpMethod === 'GET' && event.path === '/health') {
      const healthData = {
        status: 'OK',
        timestamp: new Date().toISOString(),
        version: '1.0.0',
        bot: '–°–ù–û –°–ü–± –Æ–ò –£–ü –†–§ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)',
        environment: 'yandex-cloud-function',
        stats: logger.getStats()
      };
      
      logger.info('Health check requested', { stats: healthData.stats });
      
      return {
        statusCode: 200,
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(healthData)
      };
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ª–æ–≥–æ–≤
    if (event.path && event.path.startsWith('/logs')) {
      return logRoutes.handleLogRoutes(event, context);
    }

    // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è
    logger.warn('Unknown event type', { type: body.type });
    return {
      statusCode: 200,
      body: 'ok'
    };

  } catch (error) {
    logger.error('Handler error', { 
      error: error.message, 
      stack: error.stack,
      event: event 
    });
    return {
      statusCode: 500,
      body: JSON.stringify({ error: 'Internal server error' })
    };
  } finally {
    const duration = Date.now() - startTime;
    logger.performance('Handler Request', duration, { 
      type: body?.type,
      httpMethod: event.httpMethod 
    });
  }
};
